<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.video.web.main.mapper.UserInfoMapper">
    <insert id="inserUserStats">
        insert into user_stats (fans_count, follow_count, like_count, play_count, video_count, collection_count, collect_count, birth_date, school, notice, uid)
        values (0, 0, 0, 0, 0, 0, 0, null, null, null, #{uid})
    </insert>
    <insert id="insertUnread">
        insert into msg_unread (uid, reply, at, love, `system`, whisper, dynamic)
        VALUES (#{uid}, 0, 0, 0, 0, 0, 0)
    </insert>
    <update id="updateUserStats">
        update user_stats
        <set>
            <if test="notice != null">notice = #{notice},</if>
            <if test="fansCount != null">fans_count = #{fansCount},</if>
            <if test="followCount != null">follow_count = #{followCount},</if>
            <if test="likeCount != null">like_count = #{likeCount},</if>
            <if test="playCount != null">play_count = #{playCount},</if>
            <if test="videoCount != null">video_count = #{videoCount},</if>
            <if test="collectionCount != null">collection_count = #{collectionCount},</if>
            <if test="collectCount != null">collect_count = #{collectCount},</if>
        </set>
        where uid = #{uid}
    </update>
    <update id="updateUserInfo">
        update user
        <set>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
        </set>
        where uid = #{uid}
    </update>
    <select id="selectOneByUsername" resultType="com.video.model.entity.UserInfo">
        select uid, username, password,
               nickname, avatar, background,
               gender, description, exp, coin,
               vip, status, role, auth, auth_msg,
               create_date, delete_date
        from user
        where username = #{username}
    </select>
    <select id="calFansCount" resultType="java.lang.Long">
        select COUNT(*) from follow where followee_id = #{uid}
    </select>
    <select id="calFollowCount" resultType="java.lang.Integer">
        select COUNT(*) from follow where follower_id = #{uid}
    </select>
    <select id="calLikeCount" resultType="java.lang.Long">
        select ifnull(SUM(vs.cnt), 0) from
        (select vid from video where uid = #{uid} and status = 1 and visible = 0) v
        left join
        (select good, SUM(good) cnt, vid from video_stats group by vid) vs on v.vid = vs.vid
    </select>
    <select id="calPlayCount" resultType="java.lang.Long">
        select ifnull(SUM(vs.cnt), 0) from
                (select vid from video where uid = #{uid} and status = 1 and visible = 0) v
                    left join
                (select play, SUM(play) cnt, vid from video_stats group by vid) vs on v.vid = vs.vid
    </select>
    <select id="calVideoCount" resultType="java.lang.Integer">
        select COUNT(*) from video where uid = #{uid} and status = 1 and visible = 0
    </select>
    <select id="calCollectCount" resultType="java.lang.Integer">
        select ifnull(SUM(vs.cnt), 0) from
                (select vid from video where uid = #{uid} and status = 1 and visible = 0) v
                    left join
                (select collect, SUM(collect) cnt, vid from video_stats group by vid) vs on v.vid = vs.vid
    </select>
</mapper>
